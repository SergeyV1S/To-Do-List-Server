version: "3"
services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./data:/var/lib/postgresql/data
    command: [postgres, -c, "listen_addresses=*", -c, log_statement=all]
    healthcheck:
      test: [CMD-SHELL, pg_isready -q -U postgres]
      interval: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1024M
    networks:
      - todo-app-network

  express-app:
    image: ${DOCKER_IMAGE}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    environment:
      APPNAME: ${APPNAME}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      LOCALE: ${LOCALE}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:${DATABASE_PORT}/${DATABASE_NAME}
    command: sh -c "npm run migrate:prod && npm run start"
    deploy:
      resources:
        limits:
          cpus: "3"
          memory: 2048M
    networks:
      - todo-app-network

volumes:
  postgres_data:

networks:
  todo-app-network:
    driver: bridge
